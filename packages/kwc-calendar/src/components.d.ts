/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { KwcCalendarValueChanged } from "@kwc-elements/utils/date";
export { KwcCalendarValueChanged } from "@kwc-elements/utils/date";
export namespace Components {
    interface KwcCalendar {
        /**
          * @default null
         */
        "locale": string | null;
        /**
          * @default null
         */
        "value": Date | string | null;
    }
}
export interface KwcCalendarCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKwcCalendarElement;
}
declare global {
    interface HTMLKwcCalendarElementEventMap {
        "valueChanged": KwcCalendarValueChanged;
    }
    interface HTMLKwcCalendarElement extends Components.KwcCalendar, HTMLStencilElement {
        addEventListener<K extends keyof HTMLKwcCalendarElementEventMap>(type: K, listener: (this: HTMLKwcCalendarElement, ev: KwcCalendarCustomEvent<HTMLKwcCalendarElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLKwcCalendarElementEventMap>(type: K, listener: (this: HTMLKwcCalendarElement, ev: KwcCalendarCustomEvent<HTMLKwcCalendarElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLKwcCalendarElement: {
        prototype: HTMLKwcCalendarElement;
        new (): HTMLKwcCalendarElement;
    };
    interface HTMLElementTagNameMap {
        "kwc-calendar": HTMLKwcCalendarElement;
    }
}
declare namespace LocalJSX {
    interface KwcCalendar {
        /**
          * @default null
         */
        "locale"?: string | null;
        "onValueChanged"?: (event: KwcCalendarCustomEvent<KwcCalendarValueChanged>) => void;
        /**
          * @default null
         */
        "value"?: Date | string | null;
    }
    interface IntrinsicElements {
        "kwc-calendar": KwcCalendar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kwc-calendar": LocalJSX.KwcCalendar & JSXBase.HTMLAttributes<HTMLKwcCalendarElement>;
        }
    }
}
