/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { PassTrough } from "./types";
export { PassTrough } from "./types";
export namespace Components {
    interface KwcDatePicker {
        /**
          * @default false
         */
        "adjustPopupToInput": boolean;
        "pt": PassTrough;
        /**
          * @default 'date'
         */
        "type": 'datetime' | 'date' | 'time';
        /**
          * @default null
         */
        "value": Date | string | null;
    }
}
export interface KwcDatePickerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKwcDatePickerElement;
}
declare global {
    interface HTMLKwcDatePickerElementEventMap {
        "valueChanged": Date;
    }
    interface HTMLKwcDatePickerElement extends Components.KwcDatePicker, HTMLStencilElement {
        addEventListener<K extends keyof HTMLKwcDatePickerElementEventMap>(type: K, listener: (this: HTMLKwcDatePickerElement, ev: KwcDatePickerCustomEvent<HTMLKwcDatePickerElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLKwcDatePickerElementEventMap>(type: K, listener: (this: HTMLKwcDatePickerElement, ev: KwcDatePickerCustomEvent<HTMLKwcDatePickerElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLKwcDatePickerElement: {
        prototype: HTMLKwcDatePickerElement;
        new (): HTMLKwcDatePickerElement;
    };
    interface HTMLElementTagNameMap {
        "kwc-date-picker": HTMLKwcDatePickerElement;
    }
}
declare namespace LocalJSX {
    interface KwcDatePicker {
        /**
          * @default false
         */
        "adjustPopupToInput"?: boolean;
        "onValueChanged"?: (event: KwcDatePickerCustomEvent<Date>) => void;
        "pt"?: PassTrough;
        /**
          * @default 'date'
         */
        "type"?: 'datetime' | 'date' | 'time';
        /**
          * @default null
         */
        "value"?: Date | string | null;
    }
    interface IntrinsicElements {
        "kwc-date-picker": KwcDatePicker;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kwc-date-picker": LocalJSX.KwcDatePicker & JSXBase.HTMLAttributes<HTMLKwcDatePickerElement>;
        }
    }
}
