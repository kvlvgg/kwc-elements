/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { KwcCalendarValueChanged } from "@kwc-elements/utils/date";
export { KwcCalendarValueChanged } from "@kwc-elements/utils/date";
export namespace Components {
    interface KwcTime {
        /**
          * @default null
         */
        "locale": string | null;
        /**
          * @default null
         */
        "value": Date | string | null;
    }
}
export interface KwcTimeCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKwcTimeElement;
}
declare global {
    interface HTMLKwcTimeElementEventMap {
        "valueChanged": KwcCalendarValueChanged;
    }
    interface HTMLKwcTimeElement extends Components.KwcTime, HTMLStencilElement {
        addEventListener<K extends keyof HTMLKwcTimeElementEventMap>(type: K, listener: (this: HTMLKwcTimeElement, ev: KwcTimeCustomEvent<HTMLKwcTimeElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLKwcTimeElementEventMap>(type: K, listener: (this: HTMLKwcTimeElement, ev: KwcTimeCustomEvent<HTMLKwcTimeElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLKwcTimeElement: {
        prototype: HTMLKwcTimeElement;
        new (): HTMLKwcTimeElement;
    };
    interface HTMLElementTagNameMap {
        "kwc-time": HTMLKwcTimeElement;
    }
}
declare namespace LocalJSX {
    interface KwcTime {
        /**
          * @default null
         */
        "locale"?: string | null;
        "onValueChanged"?: (event: KwcTimeCustomEvent<KwcCalendarValueChanged>) => void;
        /**
          * @default null
         */
        "value"?: Date | string | null;
    }
    interface IntrinsicElements {
        "kwc-time": KwcTime;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kwc-time": LocalJSX.KwcTime & JSXBase.HTMLAttributes<HTMLKwcTimeElement>;
        }
    }
}
